{
    "swagger": "2.0",
    "info": {
        "title": "tapi-topology API",
        "description": "tapi-topology API generated from tapi-topology.yang",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/context/": {
            "post": {
                "operationId": "create_context_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Create context by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: context",
                "parameters": [
                    {
                        "name": "context",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/context_schema"
                        },
                        "description": "contextbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "get": {
                "operationId": "retrieve_context",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/context_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve context",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: context",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "operationId": "delete_context_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete context by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: context",
                "consumes": [
                    "application/json"
                ]
            },
            "put": {
                "operationId": "update_context_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update context by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: context",
                "parameters": [
                    {
                        "name": "context",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/context_schema"
                        },
                        "description": "contextbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_service-interface-point",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/service-interface-point/{uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve service-interface-point",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: service-interface-point",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_service-interface-point_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/service-interface-point"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve service-interface-point by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: service-interface-point",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_layer-protocol_layer-protocol",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/service-interface-point/{uuid}/layer-protocol/{local-id}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve layer-protocol",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_layer-protocol_layer-protocol_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/layer-protocol"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve layer-protocol by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_layer-protocol_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_layer-protocol_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/state/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_state_state",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/lifecycle-state-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve state",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: state",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/name/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/service-interface-point/{uuid}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/label/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/service-interface-point/{uuid}/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_service-interface-point_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/name/": {
            "get": {
                "operationId": "retrieve_context_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/name/{value-name}/": {
            "post": {
                "operationId": "create_context_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Create name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: name",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "get": {
                "operationId": "retrieve_context_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "operationId": "delete_context_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: name",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "put": {
                "operationId": "update_context_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: name",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "namebody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/label/": {
            "get": {
                "operationId": "retrieve_context_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/label/{value-name}/": {
            "post": {
                "operationId": "create_context_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Create label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: label",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "label",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "labelbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "get": {
                "operationId": "retrieve_context_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "delete": {
                "operationId": "delete_context_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Delete label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Delete operation of resource: label",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            },
            "put": {
                "operationId": "update_context_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "summary": "Update label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Update operation of resource: label",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "label",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "labelbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/nw-topology-service/": {
            "get": {
                "operationId": "retrieve_context_nw-topology-service_nw-topology-service",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/network-topology-service"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve nw-topology-service",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: nw-topology-service",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/nw-topology-service/name/": {
            "get": {
                "operationId": "retrieve_context_nw-topology-service_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/nw-topology-service/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/nw-topology-service/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_nw-topology-service_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/nw-topology-service/label/": {
            "get": {
                "operationId": "retrieve_context_nw-topology-service_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/nw-topology-service/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/nw-topology-service/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_nw-topology-service_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/": {
            "get": {
                "operationId": "retrieve_context_topology_topology",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve topology",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: topology",
                "parameters": [],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/": {
            "get": {
                "operationId": "retrieve_context_topology_topology_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/topology"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve topology by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: topology",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/": {
            "get": {
                "operationId": "retrieve_context_topology_node_node",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve node",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: node",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_node_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/node"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve node by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: node",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_owned-node-edge-point",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve owned-node-edge-point",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: owned-node-edge-point",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_owned-node-edge-point_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/node-edge-point"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve owned-node-edge-point by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: owned-node-edge-point",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_layer-protocol_layer-protocol",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/{local-id}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve layer-protocol",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/{local-id}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_layer-protocol_layer-protocol_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/layer-protocol"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve layer-protocol by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/{local-id}/name/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_layer-protocol_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/{local-id}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/layer-protocol/{local-id}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_layer-protocol_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "local-id",
                        "in": "path",
                        "description": "ID of local-id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/state/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_state_state",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve state",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: state",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/name/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/label/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/owned-node-edge-point/{owned-node-edge-point_uuid}/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_owned-node-edge-point_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "owned-node-edge-point_uuid",
                        "in": "path",
                        "description": "ID of owned-node-edge-point_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/state/": {
            "get": {
                "operationId": "retrieve_context_topology_node_state_state",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve state",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: state",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-capacity_transfer-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-capacity-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/total-potential-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-capacity_total-potential-capacity_total-potential-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: total-potential-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/available-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-capacity_available-capacity_available-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity",
                            "description": "Capacity available to be assigned."
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve available-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: available-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/capacity-assigned-to-user-view/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-capacity_capacity-assigned-to-user-view_capacity-assigned-to-user-view",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/capacity-assigned-to-user-view/{total-size}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve capacity-assigned-to-user-view",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacity-assigned-to-user-view",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-capacity/capacity-assigned-to-user-view/{total-size}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-capacity_capacity-assigned-to-user-view_capacity-assigned-to-user-view_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve capacity-assigned-to-user-view by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacity-assigned-to-user-view",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "total-size",
                        "in": "path",
                        "description": "ID of total-size",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-cost/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-cost_transfer-cost",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-cost-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-cost",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-cost",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-cost/cost-characteristic/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-cost_cost-characteristic_cost-characteristic",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/transfer-cost/cost-characteristic/{cost-name cost-value cost-algorithm}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: cost-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-cost/cost-characteristic/{cost-name cost-value cost-algorithm}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-cost_cost-characteristic_cost-characteristic_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve cost-characteristic by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: cost-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "cost-name cost-value cost-algorithm",
                        "in": "path",
                        "description": "ID of cost-name cost-value cost-algorithm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-integrity/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-integrity_transfer-integrity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-integrity-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-integrity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-integrity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-timing/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-timing_transfer-timing",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-timing-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-timing",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-timing",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-timing/latency-characteristic/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-timing_latency-characteristic_latency-characteristic",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/transfer-timing/latency-characteristic/{traffic-property-name traffic-property-queing-latency}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latency-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/transfer-timing/latency-characteristic/{traffic-property-name traffic-property-queing-latency}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_transfer-timing_latency-characteristic_latency-characteristic_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve latency-characteristic by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latency-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "traffic-property-name traffic-property-queing-latency",
                        "in": "path",
                        "description": "ID of traffic-property-name traffic-property-queing-latency",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/name/": {
            "get": {
                "operationId": "retrieve_context_topology_node_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/label/": {
            "get": {
                "operationId": "retrieve_context_topology_node_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/node/{node_uuid}/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/node/{node_uuid}/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_node_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "node_uuid",
                        "in": "path",
                        "description": "ID of node_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/": {
            "get": {
                "operationId": "retrieve_context_topology_link_link",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve link",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: link",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_link_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/link"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve link by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: link",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/state/": {
            "get": {
                "operationId": "retrieve_context_topology_link_state_state",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve state",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: state",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-capacity_transfer-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-capacity-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/total-potential-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-capacity_total-potential-capacity_total-potential-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity",
                            "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve total-potential-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: total-potential-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/available-capacity/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-capacity_available-capacity_available-capacity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity",
                            "description": "Capacity available to be assigned."
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve available-capacity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: available-capacity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/capacity-assigned-to-user-view/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-capacity_capacity-assigned-to-user-view_capacity-assigned-to-user-view",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/capacity-assigned-to-user-view/{total-size}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve capacity-assigned-to-user-view",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacity-assigned-to-user-view",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-capacity/capacity-assigned-to-user-view/{total-size}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-capacity_capacity-assigned-to-user-view_capacity-assigned-to-user-view_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/capacity"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve capacity-assigned-to-user-view by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: capacity-assigned-to-user-view",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "total-size",
                        "in": "path",
                        "description": "ID of total-size",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-cost/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-cost_transfer-cost",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-cost-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-cost",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-cost",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-cost/cost-characteristic/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-cost_cost-characteristic_cost-characteristic",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/transfer-cost/cost-characteristic/{cost-name cost-value cost-algorithm}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve cost-characteristic",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: cost-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-cost/cost-characteristic/{cost-name cost-value cost-algorithm}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-cost_cost-characteristic_cost-characteristic_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/cost-characteristic"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve cost-characteristic by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: cost-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "cost-name cost-value cost-algorithm",
                        "in": "path",
                        "description": "ID of cost-name cost-value cost-algorithm",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-integrity/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-integrity_transfer-integrity",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-integrity-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-integrity",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-integrity",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-timing/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-timing_transfer-timing",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/transfer-timing-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve transfer-timing",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: transfer-timing",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-timing/latency-characteristic/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-timing_latency-characteristic_latency-characteristic",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/transfer-timing/latency-characteristic/{traffic-property-name traffic-property-queing-latency}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve latency-characteristic",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latency-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/transfer-timing/latency-characteristic/{traffic-property-name traffic-property-queing-latency}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_transfer-timing_latency-characteristic_latency-characteristic_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/latency-characteristic"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve latency-characteristic by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: latency-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "traffic-property-name traffic-property-queing-latency",
                        "in": "path",
                        "description": "ID of traffic-property-name traffic-property-queing-latency",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/risk-parameter/": {
            "get": {
                "operationId": "retrieve_context_topology_link_risk-parameter_risk-parameter",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/risk-parameter-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve risk-parameter",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: risk-parameter",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/risk-parameter/risk-characteristic/": {
            "get": {
                "operationId": "retrieve_context_topology_link_risk-parameter_risk-characteristic_risk-characteristic",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/risk-parameter/risk-characteristic/{risk-characteristic-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve risk-characteristic",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: risk-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/risk-parameter/risk-characteristic/{risk-characteristic-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_risk-parameter_risk-characteristic_risk-characteristic_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/risk-characteristic"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve risk-characteristic by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: risk-characteristic",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "risk-characteristic-name",
                        "in": "path",
                        "description": "ID of risk-characteristic-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/validation/": {
            "get": {
                "operationId": "retrieve_context_topology_link_validation_validation",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/validation-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve validation",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: validation",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/validation/validation-mechanism/": {
            "get": {
                "operationId": "retrieve_context_topology_link_validation_validation-mechanism_validation-mechanism",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/validation/validation-mechanism/{validation-mechanism layer-protocol-adjacency-validated validation-robustness}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve validation-mechanism",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: validation-mechanism",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/validation/validation-mechanism/{validation-mechanism layer-protocol-adjacency-validated validation-robustness}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_validation_validation-mechanism_validation-mechanism_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/validation-mechanism"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve validation-mechanism by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: validation-mechanism",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "validation-mechanism layer-protocol-adjacency-validated validation-robustness",
                        "in": "path",
                        "description": "ID of validation-mechanism layer-protocol-adjacency-validated validation-robustness",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/lp-transition/": {
            "get": {
                "operationId": "retrieve_context_topology_link_lp-transition_lp-transition",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/layer-protocol-transition-pac"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve lp-transition",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: lp-transition",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/name/": {
            "get": {
                "operationId": "retrieve_context_topology_link_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/label/": {
            "get": {
                "operationId": "retrieve_context_topology_link_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/link/{link_uuid}/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/link/{link_uuid}/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_link_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "link_uuid",
                        "in": "path",
                        "description": "ID of link_uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/name/": {
            "get": {
                "operationId": "retrieve_context_topology_name_name",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/name/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/name/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_name_name_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve name by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/label/": {
            "get": {
                "operationId": "retrieve_context_topology_label_label",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "items": {
                                "x-path": "/context/topology/{uuid}/label/{value-name}/",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/config/context/topology/{uuid}/label/{value-name}/": {
            "get": {
                "operationId": "retrieve_context_topology_label_label_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Retrieve label by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "ID of uuid",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "value-name",
                        "in": "path",
                        "description": "ID of value-name",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/operations/get-topology-details/": {
            "post": {
                "operationId": "create_get-topology-details_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-topology-detailsRPC_output_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Create get-topology-details by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-topology-details",
                "parameters": [
                    {
                        "name": "get-topology-details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/get-topology-detailsRPC_input_schema"
                        },
                        "description": "get-topology-detailsbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/operations/get-node-details/": {
            "post": {
                "operationId": "create_get-node-details_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-node-detailsRPC_output_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Create get-node-details by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-node-details",
                "parameters": [
                    {
                        "name": "get-node-details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/get-node-detailsRPC_input_schema"
                        },
                        "description": "get-node-detailsbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/operations/get-node-edge-point-details/": {
            "post": {
                "operationId": "create_get-node-edge-point-details_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-node-edge-point-detailsRPC_output_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Create get-node-edge-point-details by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-node-edge-point-details",
                "parameters": [
                    {
                        "name": "get-node-edge-point-details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/get-node-edge-point-detailsRPC_input_schema"
                        },
                        "description": "get-node-edge-point-detailsbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/operations/get-link-details/": {
            "post": {
                "operationId": "create_get-link-details_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-link-detailsRPC_output_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Create get-link-details by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-link-details",
                "parameters": [
                    {
                        "name": "get-link-details",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/get-link-detailsRPC_input_schema"
                        },
                        "description": "get-link-detailsbody object",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ]
            }
        },
        "/operations/get-topology-list/": {
            "post": {
                "operationId": "create_get-topology-list_by_id",
                "responses": {
                    "400": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-topology-listRPC_output_schema"
                        },
                        "description": "Successful operation"
                    }
                },
                "summary": "Create get-topology-list by ID",
                "produces": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-topology-list",
                "consumes": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "topology-context": {
            "properties": {
                "topology": {
                    "items": {
                        "$ref": "#/definitions/topology"
                    },
                    "type": "array",
                    "x-key": "uuid"
                },
                "nw-topology-service": {
                    "$ref": "#/definitions/network-topology-service"
                }
            }
        },
        "capacity": {
            "properties": {
                "committed-information-rate": {
                    "type": "string"
                },
                "total-size": {
                    "description": "Total capacity of the TopologicalEntity in MB/s",
                    "type": "string",
                    "enum": [
                        "not-applicable",
                        "10mbps",
                        "100mbps",
                        "1gbps",
                        "2.4gbps",
                        "10gbps",
                        "40gbps",
                        "100gbps",
                        "200gbps",
                        "400gbps"
                    ]
                },
                "packet-bw-profile-type": {
                    "type": "string",
                    "enum": [
                        "not-applicable",
                        "mef-10.x",
                        "rfc-2697",
                        "rfc-2698",
                        "rfc-4115"
                    ]
                },
                "peak-information-rate": {
                    "type": "string"
                },
                "committed-burst-size": {
                    "type": "string"
                },
                "peak-burst-size": {
                    "type": "string"
                },
                "coupling-flag": {
                    "type": "boolean"
                },
                "color-aware": {
                    "type": "boolean"
                }
            },
            "description": "Information on capacity of a particular TopologicalEntity."
        },
        "transfer-timing-pac": {
            "properties": {
                "latency-characteristic": {
                    "items": {
                        "$ref": "#/definitions/latency-characteristic"
                    },
                    "description": "The effect on the latency of a queuing process. This only has significant effect for packet based systems and has a complex characteristic.",
                    "type": "array",
                    "x-key": "traffic-property-name traffic-property-queing-latency"
                }
            },
            "description": "A TopologicalEntity will suffer effects from the underlying physical realization related to the timing of the information passed by the TopologicalEntity."
        },
        "risk-parameter-pac": {
            "properties": {
                "risk-characteristic": {
                    "items": {
                        "$ref": "#/definitions/risk-characteristic"
                    },
                    "description": "A list of risk characteristics for consideration in an analysis of shared risk. Each element of the list represents a specific risk consideration.",
                    "type": "array",
                    "x-key": "risk-characteristic-name"
                }
            },
            "description": "The risk characteristics of a TopologicalEntity come directly from the underlying physical realization. \nThe risk characteristics propagate from the physical realization to the client and from the server layer to the client layer, this propagation may be modified by protection.\nA TopologicalEntity may suffer degradation or failure as a result of a problem in a part of the underlying realization.\nThe realization can be partitioned into segments which have some relevant common failure modes.\nThere is a risk of failure/degradation of each segment of the underlying realization.\nEach segment is a part of a larger physical/geographical unit that behaves as one with respect to failure (i.e. a failure will have a high probability of impacting the whole unit (e.g. all cables in the same duct).\nDisruptions to that larger physical/geographical unit will impact (cause failure/errors to) all TopologicalEntities that use any part of that larger physical/geographical entity.\nAny TopologicalEntity that uses any part of that larger physical/geographical unit will suffer impact and hence each TopologicalEntity shares risk.\nThe identifier of each physical/geographical unit that is involved in the realization of each segment of a Topological entity can be listed in the RiskParameter_Pac of that TopologicalEntity.\nA segment has one or more risk characteristic.\nShared risk between two TopologicalEntities compromises the integrity of any solution that use one of those TopologicalEntity as a backup for the other.\nWhere two TopologicalEntities have a common risk characteristic they have an elevated probability of failing simultaneously compared to two TopologicalEntities that do not share risk characteristics."
        },
        "transfer-integrity-pac": {
            "properties": {
                "server-integrity-process-characteristic": {
                    "description": "Describes the effect of any server integrity enhancement process on the characteristics of the TopologicalEntity.",
                    "type": "string"
                },
                "repeat-delivery-characteristic": {
                    "description": "Primarily applies to packet systems where a packet may be delivered more than once (in fault recovery for example). \nIt can also apply to TDM where several frames may be received twice due to switching in a system with a large differential propagation delay.",
                    "type": "string"
                },
                "unavailable-time-characteristic": {
                    "description": "Describes the duration for which there may be no valid signal propagated.",
                    "type": "string"
                },
                "delivery-order-characteristic": {
                    "description": "Describes the degree to which packets will be delivered out of sequence.\nDoes not apply to TDM as the TDM protocols maintain strict order.",
                    "type": "string"
                },
                "error-characteristic": {
                    "description": "Describes the degree to which the signal propagated can be errored. \nApplies to TDM systems as the errored signal will be propagated and not packet as errored packets will be discarded.",
                    "type": "string"
                },
                "loss-characteristic": {
                    "description": "Describes the acceptable characteristic of lost packets where loss may result from discard due to errors or overflow.\nApplies to packet systems and not TDM (as for TDM errored signals are propagated unless grossly errored and overflow/underflow turns into timing slips).",
                    "type": "string"
                }
            },
            "description": "Transfer intergrity characteristic covers expected/specified/acceptable characteristic of degradation of the transfered signal.\nIt includes all aspects of possible degradation of signal content as well as any damage of any form to the total TopologicalEntity and to the carried signals.\nNote that the statement is of total impact to the TopologicalEntity so any partial usage of the TopologicalEntity (e.g. a signal that does not use full capacity) will only suffer its portion of the impact."
        },
        "topology": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "layer-protocol-name": {
                            "items": {
                                "type": "string",
                                "enum": [
                                    "och",
                                    "odu",
                                    "eth",
                                    "mpls-tp"
                                ]
                            },
                            "type": "array"
                        },
                        "link": {
                            "items": {
                                "$ref": "#/definitions/link"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        },
                        "node": {
                            "items": {
                                "$ref": "#/definitions/node"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "risk-characteristic": {
            "properties": {
                "risk-characteristic-name": {
                    "description": "The name of the risk characteristic. The characteristic may be related to a specific degree of closeness. \nFor example a particular characteristic may apply to failures that are localized (e.g. to one side of a road) where as another characteristic may relate to failures that have a broader impact (e.g. both sides of a road that crosses a bridge).\nDepending upon the importance of the traffic being routed different risk characteristics will be evaluated.",
                    "type": "string"
                },
                "risk-identifier-list": {
                    "items": {
                        "description": "A list of the identifiers of each physical/geographic unit (with the specific risk characteristic) that is related to a segment of the TopologicalEntity.",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "description": "The information for a particular risk characteristic where there is a list of risk identifiers related to that characteristic."
        },
        "transfer-capacity-pac": {
            "properties": {
                "total-potential-capacity": {
                    "$ref": "#/definitions/capacity",
                    "description": "An optimistic view of the capacity of the TopologicalEntity assuming that any shared capacity is available to be taken."
                },
                "capacity-interaction-algorithm": {
                    "description": "A reference to an algorithm that describes how various chunks of allocated capacity interact (e.g. when shared)",
                    "type": "string"
                },
                "available-capacity": {
                    "$ref": "#/definitions/capacity",
                    "description": "Capacity available to be assigned."
                },
                "capacity-assigned-to-user-view": {
                    "items": {
                        "$ref": "#/definitions/capacity"
                    },
                    "description": "Capacity already assigned",
                    "type": "array",
                    "x-key": "total-size"
                }
            },
            "description": "The TopologicalEntity derives capacity from the underlying realization. \nA TopologicalEntity may be an abstraction and virtualization of a subset of the underlying capability offered in a view or may be directly reflecting the underlying realization.\nA TopologicalEntity may be directly used in the view or may be assigned to another view for use.\nThe clients supported by a multi-layer TopologicalEntity may interact such that the resources used by one client may impact those available to another. This is derived from the LTP spec details.\nRepresents the capacity available to user (client) along with client interaction and usage. \nA TopologicalEntity may reflect one or more client protocols and one or more members for each profile."
        },
        "node-edge-point": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "termination-direction": {
                            "type": "string",
                            "enum": [
                                "bidirectional",
                                "sink",
                                "source",
                                "undefined-or-unknown"
                            ]
                        },
                        "link-port-direction": {
                            "description": "The orientation of defined flow at the LinkEnd.",
                            "type": "string",
                            "enum": [
                                "bidirectional",
                                "input",
                                "output",
                                "unidentified-or-unknown"
                            ]
                        },
                        "layer-protocol": {
                            "items": {
                                "$ref": "#/definitions/layer-protocol"
                            },
                            "type": "array",
                            "x-key": "local-id"
                        },
                        "aggregated-node-edge-point": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "state": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "link-port-role": {
                            "description": "Each LinkEnd of the Link has a role (e.g., symmetric, hub, spoke, leaf, root)  in the context of the Link with respect to the Link function. ",
                            "type": "string",
                            "enum": [
                                "symmetric",
                                "root",
                                "leaf",
                                "unknown"
                            ]
                        },
                        "mapped-service-interface-point": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-common:service-interface-point/tapi-common:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "node": {
            "description": "The ForwardingDomain (FD) object class models the \u201cForwardingDomain\u201d topological component which is used to effect forwarding of transport characteristic information and offers the potential to enable forwarding. \nAt the lowest level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs). ",
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "transfer-capacity": {
                            "$ref": "#/definitions/transfer-capacity-pac"
                        },
                        "layer-protocol-name": {
                            "items": {
                                "type": "string",
                                "enum": [
                                    "och",
                                    "odu",
                                    "eth",
                                    "mpls-tp"
                                ]
                            },
                            "type": "array"
                        },
                        "transfer-integrity": {
                            "$ref": "#/definitions/transfer-integrity-pac"
                        },
                        "transfer-timing": {
                            "$ref": "#/definitions/transfer-timing-pac"
                        },
                        "transfer-cost": {
                            "$ref": "#/definitions/transfer-cost-pac"
                        },
                        "aggregated-node-edge-point": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "state": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "encap-topology": {
                            "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid",
                            "type": "string"
                        },
                        "owned-node-edge-point": {
                            "items": {
                                "$ref": "#/definitions/node-edge-point"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "cost-characteristic": {
            "properties": {
                "cost-value": {
                    "description": "The specific cost.",
                    "type": "string"
                },
                "cost-algorithm": {
                    "description": "The cost may vary based upon some properties of the TopologicalEntity. The rules for the variation are conveyed by the costAlgorithm.",
                    "type": "string"
                },
                "cost-name": {
                    "description": "The cost characteristic will related to some aspect of the TopologicalEntity (e.g. $ cost, routing weight). This aspect will be conveyed by the costName.",
                    "type": "string"
                }
            },
            "description": "The information for a particular cost characteristic."
        },
        "transfer-cost-pac": {
            "properties": {
                "cost-characteristic": {
                    "items": {
                        "$ref": "#/definitions/cost-characteristic"
                    },
                    "description": "The list of costs where each cost relates to some aspect of the TopologicalEntity.",
                    "type": "array",
                    "x-key": "cost-name cost-value cost-algorithm"
                }
            },
            "description": "The cost characteristics of a TopologicalEntity not necessarily correlated to the cost of the underlying physical realization. \nThey may be quite specific to the individual TopologicalEntity e.g. opportunity cost. Relates to layer capacity\nThere may be many perspectives from which cost may be considered  for a particular TopologicalEntity and hence many specific costs and potentially cost algorithms. \nUsing an entity will incur a cost. "
        },
        "latency-characteristic": {
            "properties": {
                "jitter-characteristic": {
                    "description": "High frequency deviation from true periodicity of a signal and therefore a small high rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                },
                "wander-characteristic": {
                    "description": "Low frequency deviation from true periodicity of a signal and therefore a small low rate of change of transfer latency.\nApplies to TDM systems (and not packet).",
                    "type": "string"
                },
                "traffic-property-name": {
                    "description": "The identifier of the specific traffic property to which the queuing latency applies.",
                    "type": "string"
                },
                "fixed-latency-characteristic": {
                    "description": "A TopologicalEntity suffers delay caused by the realization of the servers (e.g. distance related; FEC encoding etc.) along with some client specific processing. This is the total average latency effect of the TopologicalEntity",
                    "type": "string"
                },
                "traffic-property-queing-latency": {
                    "description": "The specific queuing latency for the traffic property.",
                    "type": "string"
                }
            },
            "description": "Provides information on latency characteristic for a particular stated trafficProperty."
        },
        "layer-protocol-transition-pac": {
            "properties": {
                "transitioned-layer-protocol-name": {
                    "items": {
                        "description": "Provides the ordered structure of layer protocol transitions encapsulated in the TopologicalEntity. The ordering relates to the LinkPort role.",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "description": "Relevant for a Link that is formed by abstracting one or more LTPs (in a stack) to focus on the flow and deemphasize the protocol transformation. \nThis abstraction is relevant when considering multi-layer routing. \nThe layer protocols of the LTP and the order of their application to the signal is still relevant and need to be accounted for. This is derived from the LTP spec details.\nThis Pac provides the relevant abstractions of the LTPs and provides the necessary association to the LTPs involved.\nLinks that included details in this Pac are often referred to as Transitional Links."
        },
        "link": {
            "description": "The Link object class models effective adjacency between two or more ForwardingDomains (FD). ",
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "transfer-capacity": {
                            "$ref": "#/definitions/transfer-capacity-pac"
                        },
                        "direction": {
                            "description": "The directionality of the Link. \nIs applicable to simple Links where all LinkEnds are BIDIRECTIONAL (the Link will be BIDIRECTIONAL) or UNIDIRECTIONAL (the Link will be UNIDIRECTIONAL). \nIs not present in more complex cases.",
                            "type": "string",
                            "enum": [
                                "bidirectional",
                                "unidirectional",
                                "undefined-or-unknown"
                            ]
                        },
                        "lp-transition": {
                            "$ref": "#/definitions/layer-protocol-transition-pac"
                        },
                        "validation": {
                            "$ref": "#/definitions/validation-pac"
                        },
                        "node-edge-point": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:owned-node-edge-point/tapi-topology:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "transfer-integrity": {
                            "$ref": "#/definitions/transfer-integrity-pac"
                        },
                        "transfer-cost": {
                            "$ref": "#/definitions/transfer-cost-pac"
                        },
                        "layer-protocol-name": {
                            "items": {
                                "type": "string",
                                "enum": [
                                    "och",
                                    "odu",
                                    "eth",
                                    "mpls-tp"
                                ]
                            },
                            "type": "array"
                        },
                        "node": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:node/tapi-topology:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "risk-parameter": {
                            "$ref": "#/definitions/risk-parameter-pac"
                        },
                        "state": {
                            "$ref": "#/definitions/admin-state-pac"
                        },
                        "transfer-timing": {
                            "$ref": "#/definitions/transfer-timing-pac"
                        }
                    }
                }
            ]
        },
        "validation-mechanism": {
            "properties": {
                "validation-robustness": {
                    "description": "Quality of validation (i.e. how likely is the stated validation to be invalid)",
                    "type": "string"
                },
                "validation-mechanism": {
                    "description": "Name of mechanism used to validate adjacency",
                    "type": "string"
                },
                "layer-protocol-adjacency-validated": {
                    "description": "State of validatiion",
                    "type": "string"
                }
            },
            "description": "Identifies the validation mechanism and describes the characteristics of that mechanism"
        },
        "validation-pac": {
            "properties": {
                "validation-mechanism": {
                    "items": {
                        "$ref": "#/definitions/validation-mechanism"
                    },
                    "description": "Provides details of the specific validation mechanism(s) used to confirm the presence of an intended topologicalEntity.",
                    "type": "array",
                    "x-key": "validation-mechanism layer-protocol-adjacency-validated validation-robustness"
                }
            },
            "description": "Validation covers the various adjacenct discovery and reachability verification protocols. Also may cover Information source and degree of integrity."
        },
        "network-topology-service": {
            "allOf": [
                {
                    "$ref": "#/definitions/service-spec"
                },
                {
                    "properties": {
                        "topology": {
                            "items": {
                                "x-path": "/tapi-common:context/tapi-topology:topology/tapi-topology:uuid",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "local-class": {
            "properties": {
                "name": {
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "x-key": "value-name"
                },
                "local-id": {
                    "type": "string"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "global-class": {
            "properties": {
                "name": {
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                    "type": "array",
                    "x-key": "value-name"
                },
                "label": {
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                    "type": "array",
                    "x-key": "value-name"
                },
                "uuid": {
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
                    "type": "string"
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "service-spec": {
            "$ref": "#/definitions/global-class"
        },
        "admin-state-pac": {
            "properties": {
                "administrative-state": {
                    "type": "string",
                    "enum": [
                        "locked",
                        "unlocked"
                    ]
                },
                "operational-state": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                },
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ]
                }
            },
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects."
        },
        "name-and-value": {
            "properties": {
                "value": {
                    "description": "The value",
                    "type": "string"
                },
                "value-name": {
                    "description": "The name of the value. The value need not have a name.",
                    "type": "string"
                }
            },
            "description": "A scoped name-value pair"
        },
        "operational-state-pac": {
            "properties": {
                "operational-state": {
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled"
                    ]
                },
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ]
                }
            },
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects."
        },
        "lifecycle-state-pac": {
            "properties": {
                "lifecycle-state": {
                    "type": "string",
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ]
                }
            },
            "description": "Provides state attributes for an entity that has lifeccycle aspects only."
        },
        "layer-protocol": {
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. ",
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "properties": {
                        "termination-state": {
                            "description": "Indicates whether the layer is terminated and if so how.",
                            "type": "string",
                            "enum": [
                                "lp-can-never-terminate",
                                "lt-not-terminated",
                                "terminated-server-to-client-flow",
                                "terminated-client-to-server-flow",
                                "terminated-bidirectional",
                                "lt-permenantly-terminated",
                                "termination-state-unknown"
                            ]
                        },
                        "termination-direction": {
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows",
                            "type": "string",
                            "enum": [
                                "bidirectional",
                                "sink",
                                "source",
                                "undefined-or-unknown"
                            ]
                        },
                        "layer-protocol-name": {
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity.",
                            "type": "string",
                            "enum": [
                                "och",
                                "odu",
                                "eth",
                                "mpls-tp"
                            ]
                        }
                    }
                }
            ]
        },
        "resource-spec": {
            "$ref": "#/definitions/global-class"
        },
        "context": {
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements).",
            "allOf": [
                {
                    "$ref": "#/definitions/global-class"
                },
                {
                    "properties": {
                        "service-interface-point": {
                            "items": {
                                "$ref": "#/definitions/service-interface-point"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        }
                    }
                }
            ]
        },
        "service-interface-point": {
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms.",
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/lifecycle-state-pac"
                        },
                        "direction": {
                            "type": "string",
                            "enum": [
                                "bidirectional",
                                "sink",
                                "source",
                                "undefined-or-unknown"
                            ]
                        },
                        "layer-protocol": {
                            "items": {
                                "$ref": "#/definitions/layer-protocol"
                            },
                            "type": "array",
                            "x-key": "local-id"
                        }
                    }
                }
            ]
        },
        "time-range": {
            "properties": {
                "end-time": {
                    "type": "string"
                },
                "start-time": {
                    "type": "string"
                }
            }
        },
        "context_schema": {
            "allOf": [
                {
                    "$ref": "#/definitions/context"
                },
                {
                    "properties": {
                        "name": {
                            "items": {
                                "$ref": "#/definitions/name-and-value"
                            },
                            "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity.",
                            "type": "array",
                            "x-key": "value-name"
                        },
                        "topology": {
                            "items": {
                                "$ref": "#/definitions/topology"
                            },
                            "type": "array",
                            "x-key": "uuid"
                        },
                        "label": {
                            "items": {
                                "$ref": "#/definitions/name-and-value"
                            },
                            "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state.",
                            "type": "array",
                            "x-key": "value-name"
                        },
                        "nw-topology-service": {
                            "$ref": "#/definitions/network-topology-service"
                        },
                        "uuid": {
                            "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "get-topology-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-topology-detailsRPC_output_schema": {
            "properties": {
                "topology": {
                    "$ref": "#/definitions/topology"
                }
            }
        },
        "get-node-detailsRPC_input_schema": {
            "properties": {
                "topology-id-or-name": {
                    "type": "string"
                },
                "node-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-node-detailsRPC_output_schema": {
            "properties": {
                "node": {
                    "$ref": "#/definitions/node"
                }
            }
        },
        "get-node-edge-point-detailsRPC_input_schema": {
            "properties": {
                "ep-id-or-name": {
                    "type": "string"
                },
                "topology-id-or-name": {
                    "type": "string"
                },
                "node-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-node-edge-point-detailsRPC_output_schema": {
            "properties": {
                "node-edge-point": {
                    "$ref": "#/definitions/node-edge-point"
                }
            }
        },
        "get-link-detailsRPC_input_schema": {
            "properties": {
                "link-id-or-name": {
                    "type": "string"
                },
                "topology-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-link-detailsRPC_output_schema": {
            "properties": {
                "link": {
                    "$ref": "#/definitions/link"
                }
            }
        },
        "get-topology-listRPC_output_schema": {
            "properties": {
                "topology": {
                    "items": {
                        "$ref": "#/definitions/topology"
                    },
                    "type": "array"
                }
            }
        }
    }
}