{
    "swagger": "2.0",
    "info": {
        "title": "tapi-common API",
        "description": "tapi-common API generated from tapi-common.yang",
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/restconf",
    "schemes": [
        "http"
    ],
    "paths": {
        "/config/context/": {
            "delete": {
                "operationId": "delete_context_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Delete operation of resource: context",
                "summary": "Delete context by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "description": "contextbody object",
                        "in": "body",
                        "name": "context",
                        "schema": {
                            "$ref": "#/definitions/context"
                        },
                        "required": true
                    }
                ],
                "operationId": "create_context_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: context",
                "summary": "Create context by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "description": "contextbody object",
                        "in": "body",
                        "name": "context",
                        "schema": {
                            "$ref": "#/definitions/context"
                        },
                        "required": true
                    }
                ],
                "operationId": "update_context_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Update operation of resource: context",
                "summary": "Update context by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "parameters": [],
                "operationId": "retrieve_context",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: context",
                "summary": "Retrieve context",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/context"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/": {
            "get": {
                "parameters": [],
                "operationId": "retrieve_context_service-interface-point_service-interface-point",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: service-interface-point",
                "summary": "Retrieve service-interface-point",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_service-interface-point_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: service-interface-point",
                "summary": "Retrieve service-interface-point by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/service-interface-point"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_layer-protocol_layer-protocol",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "summary": "Retrieve layer-protocol",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/layer-protocol/{local-id}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "local-id",
                        "description": "ID of local-id",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_layer-protocol_layer-protocol_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: layer-protocol",
                "summary": "Retrieve layer-protocol by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/layer-protocol"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "local-id",
                        "description": "ID of local-id",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_layer-protocol_name_name",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/{value-name}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/layer-protocol/{local-id}/name/{value-name}/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "local-id",
                        "description": "ID of local-id",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_layer-protocol_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/state/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_state_state",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: state",
                "summary": "Retrieve state",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/lifecycle-state-pac"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/name/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_name_name",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/name/{value-name}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/name/{value-name}/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/label/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_label_label",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/service-interface-point/{uuid}/label/{value-name}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/service-interface-point/{uuid}/label/{value-name}/": {
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "uuid",
                        "description": "ID of uuid",
                        "required": true
                    },
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_service-interface-point_label_label_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/name/": {
            "get": {
                "parameters": [],
                "operationId": "retrieve_context_name_name",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/name/{value-name}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/name/{value-name}/": {
            "delete": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "delete_context_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Delete operation of resource: name",
                "summary": "Delete name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    },
                    {
                        "description": "namebody object",
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "required": true
                    }
                ],
                "operationId": "create_context_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: name",
                "summary": "Create name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    },
                    {
                        "description": "namebody object",
                        "in": "body",
                        "name": "name",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "required": true
                    }
                ],
                "operationId": "update_context_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Update operation of resource: name",
                "summary": "Update name by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_name_name_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: name",
                "summary": "Retrieve name by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/label/": {
            "get": {
                "parameters": [],
                "operationId": "retrieve_context_label_label",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "summary": "Retrieve label",
                "responses": {
                    "200": {
                        "schema": {
                            "items": {
                                "type": "string",
                                "x-path": "/context/label/{value-name}/"
                            },
                            "type": "array"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/config/context/label/{value-name}/": {
            "delete": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "delete_context_label_label_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Delete operation of resource: label",
                "summary": "Delete label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    },
                    {
                        "description": "labelbody object",
                        "in": "body",
                        "name": "label",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "required": true
                    }
                ],
                "operationId": "create_context_label_label_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: label",
                "summary": "Create label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    },
                    {
                        "description": "labelbody object",
                        "in": "body",
                        "name": "label",
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "required": true
                    }
                ],
                "operationId": "update_context_label_label_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Update operation of resource: label",
                "summary": "Update label by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "type": "string",
                        "in": "path",
                        "name": "value-name",
                        "description": "ID of value-name",
                        "required": true
                    }
                ],
                "operationId": "retrieve_context_label_label_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Retrieve operation of resource: label",
                "summary": "Retrieve label by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/name-and-value"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/operations/get-service-interface-point-details/": {
            "post": {
                "parameters": [
                    {
                        "description": "get-service-interface-point-detailsbody object",
                        "in": "body",
                        "name": "get-service-interface-point-details",
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-detailsRPC_input_schema"
                        },
                        "required": true
                    }
                ],
                "operationId": "create_get-service-interface-point-details_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-service-interface-point-details",
                "summary": "Create get-service-interface-point-details by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-detailsRPC_output_schema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        },
        "/operations/get-service-interface-point-list/": {
            "post": {
                "operationId": "create_get-service-interface-point-list_by_id",
                "consumes": [
                    "application/json"
                ],
                "description": "Create operation of resource: get-service-interface-point-list",
                "summary": "Create get-service-interface-point-list by ID",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/get-service-interface-point-listRPC_output_schema"
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Internal Error"
                    }
                },
                "produces": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "admin-state-pac": {
            "properties": {
                "lifecycle-state": {
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ],
                    "type": "string"
                },
                "operational-state": {
                    "enum": [
                        "disabled",
                        "enabled"
                    ],
                    "type": "string"
                },
                "administrative-state": {
                    "enum": [
                        "locked",
                        "unlocked"
                    ],
                    "type": "string"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that can be administered. Such an entity also has operational and lifecycle aspects."
        },
        "resource-spec": {
            "$ref": "#/definitions/global-class"
        },
        "local-class": {
            "properties": {
                "local-id": {
                    "type": "string"
                },
                "name": {
                    "x-key": "value-name",
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity."
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "name-and-value": {
            "properties": {
                "value-name": {
                    "type": "string",
                    "description": "The name of the value. The value need not have a name."
                },
                "value": {
                    "type": "string",
                    "description": "The value"
                }
            },
            "description": "A scoped name-value pair"
        },
        "time-range": {
            "properties": {
                "start-time": {
                    "type": "string"
                },
                "end-time": {
                    "type": "string"
                }
            }
        },
        "service-spec": {
            "$ref": "#/definitions/global-class"
        },
        "lifecycle-state-pac": {
            "properties": {
                "lifecycle-state": {
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ],
                    "type": "string"
                }
            },
            "description": "Provides state attributes for an entity that has lifeccycle aspects only."
        },
        "operational-state-pac": {
            "properties": {
                "lifecycle-state": {
                    "enum": [
                        "planned",
                        "potential",
                        "installed",
                        "pending-removal"
                    ],
                    "type": "string"
                },
                "operational-state": {
                    "enum": [
                        "disabled",
                        "enabled"
                    ],
                    "type": "string"
                }
            },
            "description": "Provides state attributes that are applicable to an entity that reflects operational aspects. Such an entity is expected to also have lifecycle aspects."
        },
        "service-interface-point": {
            "allOf": [
                {
                    "$ref": "#/definitions/resource-spec"
                },
                {
                    "properties": {
                        "state": {
                            "$ref": "#/definitions/lifecycle-state-pac"
                        },
                        "layer-protocol": {
                            "x-key": "local-id",
                            "items": {
                                "$ref": "#/definitions/layer-protocol"
                            },
                            "type": "array"
                        },
                        "direction": {
                            "enum": [
                                "bidirectional",
                                "sink",
                                "source",
                                "undefined-or-unknown"
                            ],
                            "type": "string"
                        }
                    }
                }
            ],
            "description": "The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. \nThe structure of LTP supports all transport protocols including circuit and packet forms."
        },
        "layer-protocol": {
            "allOf": [
                {
                    "$ref": "#/definitions/local-class"
                },
                {
                    "properties": {
                        "termination-state": {
                            "enum": [
                                "lp-can-never-terminate",
                                "lt-not-terminated",
                                "terminated-server-to-client-flow",
                                "terminated-client-to-server-flow",
                                "terminated-bidirectional",
                                "lt-permenantly-terminated",
                                "termination-state-unknown"
                            ],
                            "type": "string",
                            "description": "Indicates whether the layer is terminated and if so how."
                        },
                        "layer-protocol-name": {
                            "enum": [
                                "och",
                                "odu",
                                "eth",
                                "mpls-tp"
                            ],
                            "type": "string",
                            "description": "Indicate the specific layer-protocol described by the LayerProtocol entity."
                        },
                        "termination-direction": {
                            "enum": [
                                "bidirectional",
                                "sink",
                                "source",
                                "undefined-or-unknown"
                            ],
                            "type": "string",
                            "description": "The overall directionality of the LP. \n- A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss.\n- A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows\n- A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
                        }
                    }
                }
            ],
            "description": "Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. \nIt can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. \nWhere the client \u2013 server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP. "
        },
        "global-class": {
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "UUID: An identifier that is universally unique within an identifier space, where the identifier space is itself globally unique, and immutable. An UUID carries no semantics with respect to the purpose or state of the entity.\nUUID here uses string representation as defined in RFC 4122.  The canonical representation uses lowercase characters.\nPattern: [0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-' + '[0-9a-fA-F]{4}-[0-9a-fA-F]{12} \nExample of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6"
                },
                "name": {
                    "x-key": "value-name",
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "type": "array",
                    "description": "List of names. A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity."
                },
                "label": {
                    "x-key": "value-name",
                    "items": {
                        "$ref": "#/definitions/name-and-value"
                    },
                    "type": "array",
                    "description": "List of labels.A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state."
                }
            },
            "description": "The TAPI GlobalComponent serves as the super class for all TAPI entities that can be directly retrieved by their ID. As such, these are first class entities and their ID is expected to be globally unique. "
        },
        "context": {
            "allOf": [
                {
                    "$ref": "#/definitions/global-class"
                },
                {
                    "properties": {
                        "service-interface-point": {
                            "x-key": "uuid",
                            "items": {
                                "$ref": "#/definitions/service-interface-point"
                            },
                            "type": "array"
                        }
                    }
                }
            ],
            "description": "The Network Control Domain (NCD) object class represents the scope of control that a particular SDN controller has with respect to a particular network, (i.e., encompassing a designated set of interconnected (virtual) network elements)."
        },
        "get-service-interface-point-detailsRPC_input_schema": {
            "properties": {
                "sip-id-or-name": {
                    "type": "string"
                }
            }
        },
        "get-service-interface-point-detailsRPC_output_schema": {
            "properties": {
                "sip": {
                    "$ref": "#/definitions/service-interface-point"
                }
            }
        },
        "get-service-interface-point-listRPC_output_schema": {
            "properties": {
                "sip": {
                    "items": {
                        "$ref": "#/definitions/service-interface-point"
                    },
                    "type": "array"
                }
            }
        }
    }
}